user  nginx; # Nginx 웹 서버가 실행될 때 사용할 사용자를 지정합니다.
worker_processes  auto; # 웹 서버의 worker 프로세스의 수, 'auto'를 지정하면 시스템 자원에 따라 자동으로 프로세스 수가 결정됩니다
#  Nginx의 오류 로그 파일의 경로와 로그 레벨을 설정합니다.  '/var/log/nginx/error.log' 경로에 'warn' 레벨 이상의 오류가 기록될 것입니다.
error_log  /var/log/nginx/error.log warn;
# Nginx 마스터 프로세스의 PID 파일 경로를 설정. Nginx 프로세스의 PID를 저장하여, 관리와 모니터링을 도와줍니다.
pid        /var/run/nginx.pid;
events { # Nginx 웹 서버의 이벤트 모듈을 설정
    worker_connections  1024; # worker 프로세스가 동시에 처리할 수 있는 커넥션의 최대 개수를 설정
}
http {

    include       /etc/nginx/mime.types; # /etc/nginx/mime.types 파일을 포함하여 MIME 유형을 설정합니다. MIME 유형은 파일의 확장자에 따라 콘텐츠 유형을 지정하는 데 사용됩니다.
    default_type  application/octet-stream; # MIME 유형을 지정하지 않은 경우에 기본으로 사용할 콘텐츠 유형을 설정

    client_max_body_size 100M;

    map $http_upgrade $connection_upgrade {
            default upgrade;
            ''      close;
    }

    server {
        listen 80;
        server_name jazzmeet.site;
        server_tokens off;

        location / {
              return 301 https://$host$request_uri;
            }

        # letsencrypt  인증서를 위한 challenge 요청을 처리하기 위한 경로 설정
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
    }

    server {
        listen 443 ssl;
        server_name jazzmeet.site;
        server_tokens off;

        location /api { # 이 부분은 api라는 uri로 통신 시 백엔드에 프록시 처리를 하기 위함
          proxy_pass         http://app:8080;
          proxy_redirect     off;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_cookie_path / "/; SameSite=None; Secure";

        }

        location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
          try_files $uri $uri/ /index.html;
        }

        ssl_certificate /etc/letsencrypt/live/jazzmeet.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/jazzmeet.site/privkey.pem;

        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    }

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    # Nginx가 sendfile 시스템 콜을 사용하여 파일을 전송할지 여부를 결정 'on'으로 설정되어 있으므로, Nginx는 sendfile을 사용하여 파일 전송을 수행할 것입니다.
    sendfile        on;
    # 클라이언트와 연결된 keep-alive 타임아웃을 지정합니다.
    keepalive_timeout  65;
    include /etc/nginx/conf.d/*.conf;
}